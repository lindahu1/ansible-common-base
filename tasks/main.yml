---
- name: Add the OS specific variables - {{ ansible_os_family }}
  include_vars: "{{ ansible_os_family | default('main') }}.yml"
  register: addvars
  when: ansible_distribution != 'Amazon'
  tags: [ pkgs, pip, config, sshd ]

- debug: var=addvars

- name: Add the OS specific variables for Amazon
  include_vars: "{{ ansible_distribution | default('main') }}.yml"
  when: ansible_distribution == 'Amazon'
  tags: [ pkgs, pip, config, sshd ]

# set timezone
#- name: Get timedatectl information
#  command: timedatectl
#  register: timedatectl
#  ignore_errors: yes
#  when: timezone is defined and (not timezone is none)
#- name: set timezone to {{ timezone }} by timedatectl
#  command: timedatectl set-timezone {{ timezone }}
#  become: yes
#  no_log: "{{ nolog }}"
#  tags: [config]
#  when: timezone is defined and (not timezone is none) and timedatectl.rc == 0

- name: set timezone to {{ timezone }}
  timezone:
    name: "{{ timezone }}"
  become: yes
  register: tz
  tags: [config]
  when: timezone is defined and (not timezone is none)
  #when: timezone is defined and (not timezone is none) and timedatectl.rc != 0

- name: Debug
  debug:
    msg: "{{ tz }}"

- name: Set localtime
  file:
    src: "/usr/share/zoneinfo/{{ timezone }}"
    dest: /etc/localtime
    state: link
    force: yes
  tags: [config]
  when: timezone is defined and timezone and (not timezone is none) and tz.diff.before != tz.diff.after

# Install common packages
- include: common_pkgs.yml
  tags: pkgs

# Install pip
- include: pip.yml
  when: install_pip
  tags: [ pip, pkgs ]

# Configure common setting
- include: common_config.yml
  tags: [config]

# Configure sshd setting
- include: sshd.yml
  tags: [sshd]
...
